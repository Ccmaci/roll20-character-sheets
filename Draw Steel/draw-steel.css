.charsheet {
	background-color: #eeeeee;
	padding: 1em;
	font-family: Georgia, serif;
}

.sheet-body > :not(.v-spacer):not(.h-spacer) {
	background-color: #fdfdfd;
}

.border {
	border: 3px solid #aaa;
	border-radius: 4px;
	padding: 0.5em;
}

.v-spacer {
	height: 1em;
}

.hexagon {
	width: 64px;
	height: 64px;
	display: flex;
	flex-direction: column;
	align-items: center;
	justify-content: center;
	background-color: #aaa;
	-webkit-mask-image:
		url(https://raw.githubusercontent.com/Roll20/roll20-character-sheets/master/Draw%20Steel/images/hexagon.svg),
		linear-gradient(#000 0 0);
	mask-image:
		url(https://raw.githubusercontent.com/Roll20/roll20-character-sheets/master/Draw%20Steel/images/hexagon.svg),
		linear-gradient(#000 0 0);
	mask-size: cover;
}

.charsheet input {
	width: unset;
}
.charsheet input[type=number] {
	text-align: center;
}
.charsheet input[type=number].no-spin::-webkit-inner-spin-button,
.charsheet input[type=number].no-spin::-webkit-inner-spin-button {
	-webkit-appearance: none;
	margin: 0;
}
.charsheet input.input-md {
	height: 20px;
	font-size: 0.9em;
}
.charsheet label {
	display: unset;
	margin: unset;
	padding: unset;
	width: unset;
	text-align: unset;
	float: unset;
	font-size: 1em;
}
label.sublabel {
	height: 16px;
	font-size: 0.8em;
	font-weight: normal;
}
.charsheet label.sublabel input {
	padding: 0;
	font-size: 1em;
}
.charsheet select {
	margin: unset;
	width: unset;
}
.charsheet textarea {
	margin: unset;
	width: unset;
}

.header-panel {
	display: flex;
	gap: 0.5em;
}
.header-panel > * {
	flex: 1 1 0;
}

.title {
	text-align: center;
	text-transform: uppercase;
}

.minimizable:has(.minimize-control > .minimize:checked) > :not(.minimize-control):not(.minimize-ignore):not(.minimize-show),
.minimizable:has(.minimize-control > .minimize:checked) > .minimize-ignore > :not(.minimize-ignore),
.minimizable:has(.minimize-control > .minimize:not(:checked)) > .minimize-show {
	display: none;
}

.profile-panel {
	display: grid;
	grid-template-columns: repeat(2, 1fr);
	column-gap: 0.5em;
}
.profile-panel > * {
  display: flex;
  flex-direction: column;
}
.profile-panel .name-input-group {
	grid-column-end: span 2;
}

.progress-panel {
	display: grid;
	grid-template-columns: repeat(6, 1fr);
	grid-gap: 0.5em;
}
.progress-panel > * {
	display: flex;
	flex-direction: column;
	align-items: center;
}
.victories-input-group {
	grid-column-end: span 5;
}
.wealth-input-group, .renown-input-group, .experience-input-group {
	grid-column-end: span 2;
}

.stats-panel {
	position: sticky;
	top: 0;
	z-index: 10;
	display: grid;
	grid-template-columns: repeat(12, 1fr);
	gap: 0.25em;
}
.stats-panel > .minimize-control {
	grid-column-start: 1;
	grid-column-end: -1;
}

.core-panel {
	grid-column-end: span 6;
	grid-row-end: span 2;
	display: flex;
	flex-direction: column;
	align-items: center;
	justify-content: space-between;
}

.characteristics {
	display: grid;
	grid-template-columns: repeat(5, 1fr);
	gap: 0.25em;
}
.characteristic-input-group > label {
	cursor: pointer;
}
.characteristic-input-group > input {
	text-align: center;
}

.roller-wrapper {
	position: absolute;
	top: 0;
	left: 0;
}
input.characteristic-i18n-switch[value="might"]
~ .characteristic-i18n:not([data-i18n="might"]),
input.characteristic-i18n-switch[value="agility"]
~ .characteristic-i18n:not([data-i18n="agility"]),
input.characteristic-i18n-switch[value="reason"]
~ .characteristic-i18n:not([data-i18n="reason"]),
input.characteristic-i18n-switch[value="intuition"]
~ .characteristic-i18n:not([data-i18n="intuition"]),
input.characteristic-i18n-switch[value="presence"]
~ .characteristic-i18n:not([data-i18n="presence"]) {
	display: none;
}

.roller-edge-bane-select {
	display: grid;
	grid-template-columns: repeat(5, 1fr);
	gap: 0.25em;
	justify-items: center;
}

.potencies, .potencies > div {
	display: flex;
	align-items: center;
	gap: 0.25em;
}

.movement {
	display: grid;
	grid-template-columns: repeat(4, 1fr);
	gap: 0.1em;
}
.movement-input-group {
	display: flex;
	flex-direction: column;
	align-items: center;
}
.movement-input-group > input {
	width: 3.75em;
	text-align: center;
}

.stamina-panel {
	grid-column-end: span 3;
	display: grid;
	grid-template-columns: 2fr repeat(2, 1fr);
	column-gap: 0.5em;
}
.stamina-panel > .panel-title {
	grid-column-start: 1;
	grid-column-end: -1;
	text-align: center;
}
.stamina-input-group,
.stamina-temporary-input-group {
	grid-row-end: span 2;
	display: flex;
	flex-direction: column;
	align-items: center;
}

.recoveries-panel {
	grid-column-end: span 2;
	display: grid;
	grid-template-columns: repeat(2, 1fr);
	grid-auto-rows: min-content;
	gap: 0.1em;
}
.recoveries-panel > .panel-title {
	grid-column-start: 1;
	grid-column-end: -1;
	justify-self: center;
}
.recoveries-input-group {
	grid-column-start: 1;
	grid-column-end: -1;
	justify-self: center;
}
.recovery-amount-input-group,
.recoveries-max-input-group {
	display: flex;
	flex-direction: column;
	align-items: center;
}

.damage-mod-panel {
	grid-column-end: span 6;
	display: grid;
	grid-template-columns: auto 1fr;
	align-items: center;
	gap: 0.25em;
}

.resource-description-panel {
	grid-column-end: span 4;
}
.resource-description-panel > textarea {
	width: 100%;
	height: 6em;
}

.resource-panel {
	grid-column-end: span 2;
	justify-self: center;
	max-width: 100px;
	display: grid;
	grid-template-columns: 1fr;
	grid-auto-rows: min-content;
	justify-items: center;
}
.resource-panel > .panel-title {
	max-width: inherit;
	overflow-wrap: break-word;
	text-align: center;
}
.resource-name-input-group > input {
	width: 100px;
	text-align: center;
}

.surges-panel {
	grid-column-end: span 2;
	display: grid;
	grid-template-columns: 1fr;
	grid-auto-rows: min-content;
	justify-items: center;
}
.surges-panel > label {
	justify-self: start;
}

.conditions-panel {
	grid-column-end: span 4;
}
.repcontainer[data-groupname="repeating_conditions"] > .repitem {
	display: grid;
	grid-template-columns: auto auto;
	gap: 0.25em;
	align-items: start;
}
.repcontainer[data-groupname="repeating_conditions"] > .repitem > input {
	grid-row-end: span 2;
}

.biography-panel {
	display: grid;
	grid-template-columns: repeat(2, 1fr);
	grid-gap: 0.5em;
}
.biography-panel > .minimize-control {
	grid-column-start: 1;
	grid-column-end: -1;
}
.career-panel {
	display: grid;
}
.career-panel > .panel-title,
.career-panel > input,
.career-panel > label {
	text-align: center;
}
.career-panel > input {
	font-weight: bold;
}
.career-panel > textarea {
	height: 75px;
}
.complication-panel {
	display: grid;
}
.complication-panel > .panel-title,
.complication-panel > input,
.complication-panel > label {
	text-align: center;
}
.complication-panel > input {
	font-weight: bold;
}
.complication-panel > textarea {
	height: 75px;
}
.culture-panel {
	grid-column-start: 1;
	grid-column-end: -1;
	display: grid;
	grid-template-columns: repeat(3, 1fr);
	grid-gap: 0.2em;
}
.culture-panel > .panel-title {
	grid-column-start: 1;
	grid-column-end: -1;
	text-align: center;
}
.culture-panel > label {
	text-align: center;
}
.culture-panel > textarea {
	height: 75px;
}

.skills-panel {
	display: grid;
	grid-template-columns: auto 1fr;
	gap: 0.25em;
	align-items: center;
}
.skills-panel > .panel-title {
	grid-column-start: 1;
	grid-column-end: -1;
}

.languages-panel {
	display: grid;
	grid-template-columns: 1fr;
}
.languages-panel > .panel-title {
	grid-column-start: 1;
	grid-column-end: -1;
}

.features-panel {
	display: grid;
	grid-template-columns: repeat(6, 1fr);
	grid-gap: 0.5em;
}
.features-panel > .minimize-control {
	grid-column-start: 1;
	grid-column-end: -1;
}

.class-panel {
	grid-column-end: span 4;
	display: grid;
	grid-template-columns: repeat(2, 1fr);
}
.class-panel > .panel-title {
	grid-column-start: 1;
	grid-column-end: -1;
	text-align: center;
}

.ancestry-panel {
	grid-column-end: span 2;
	display: grid;
}
.ancestry-panel > .panel-title {
	text-align: center;
}

.perks-panel {
	grid-column-end: span 4;
}
.perks-panel > .panel-title {
	text-align: center;
}
.repcontainer[data-groupname="repeating_perks"] {
	display: grid;
	grid-template-columns: repeat(2, 1fr);
}
.perk-card {
	display: grid;
}
.perk-card > textarea {
	height: 75px;
}

.titles-panel {
	grid-column-end: span 2;
}
.titles-panel > .panel-title {
	text-align: center;
}
.repcontainer[data-groupname="repeating_titles"] {
	display: grid;
}
.title-card {
	display: grid;
}
.title-card > textarea {
	height: 75px;
}

.modifiers-panel {
	grid-column-start: 1;
	grid-column-end: -1;
}
.modifiers-panel > .panel-title {
	text-align: center;
}
.repcontainer[data-groupname="repeating_modifiers"] {
	display: grid;
	grid-template-columns: repeat(2, 1fr);
	grid-gap: 0.5em;
}
.modifier-card {
	display: grid;
	grid-template-columns: repeat(6, 1fr);
	grid-gap: 0.2em;
}
.modifier-name {
	grid-column-end: span 4;
	font-weight: bold;
}
.modifier-card:has(> .modifier-type > option[value="kit"]:checked) > :not(.kit):not(.modifier-all),
.modifier-card:has(> .modifier-type > option[value="kit"]:not(:checked)) > .kit {
	display: none;
}
.modifier-type {
	grid-column-end: span 2;
}
.modifier-card > .input-group {
	display: grid;
}
.modifier-card > .input-group > input[type] {
	width: 100%;
}
.modifier-card > .input-group > label {
	text-align: center;
}
.kit-weapon-input-group,
.kit-armor-input-group {
	grid-column-end: span 3;
}
.modifier-card > .kit-damage-label {
	grid-column-end: span 3;
	text-align: center;
}
.modifier-card:has(> .modifier-type > option[value="kit"]:checked) > .modifier-description {
	grid-column-end: span 3;
	grid-row-end: span 4;
	height: 100%;
}
.modifier-card:has(> .modifier-type > option[value="kit"]:not(:checked)) > .modifier-description {
	grid-column-start: 1;
	grid-column-end: -1;
	height: 75px;
}

.abilities-panel {
	display: grid;
	grid-gap: 0.5em;
}
.free-strikes,
.repcontainer[data-groupname="repeating_abilities"] {
	display: grid;
	grid-template-columns: repeat(2, 1fr);
	grid-gap: 0.5em;
}
.ability-card {
	display: grid;
	grid-template-columns: repeat(6, 1fr);
}
.ability-name {
	grid-column-end: span 4;
	font-weight: bold;
}
.ability-cost-input-group {
	grid-column-end: span 2;
	justify-self: end;
}
.ability-cost-input-group > input {
	font-weight: bold;
}
.ability-description {
	grid-column-start: 1;
	grid-column-end: -1;
	font-size: 0.8em;
	font-style: italic;
}
.ability-keywords {
	grid-column-end: span 4;
	font-size: 0.8em;
	font-weight: bold;
}
.ability-type {
	grid-column-end: span 2;
	text-align: end;
	font-weight: bold;
}
.ability-type:has(> option[value*="triggered"]:checked) ~ .triggered-hide,
.ability-type:not(:has(> option[value*="triggered"]:checked)) ~ .triggered-show {
	display: none;
}
.ability-distance {
	grid-column-end: span 3;
}
.ability-target {
	grid-column-end: span 3;
	font-size: 0.8em;
	text-align: end;
}

.ability-card:has([name="attr_has_power_roll"]:not(:checked)) > .power-roll > .power-roll-mods > :not(input[type="checkbox"]):not(label),
.ability-card:has([name="attr_has_power_roll"]:not(:checked)) > .power-roll > :not(.power-roll-mods) {
	display: none;
}
.ability-card > .power-roll-hide,
.ability-card > .power-roll {
	grid-column-start: 1;
	grid-column-end: -1;
}
.power-roll {
	display: grid;
	grid-template-columns: auto 1fr;
	align-items: center;
}
.power-roll-mods {
	grid-column-start: 1;
	grid-column-end: -1;
}
.power-roll-characteristic {
	font-weight: bold;
}
.power-roll-tier-effect {
	font-size: 0.8em;
}
.ability-card > .ability-trigger,
.ability-card > .ability-effect {
	grid-column-start: 1;
	grid-column-end: -1;
	height: 50px;
}

.repcontainer[data-groupname="repeating_projects"] > .repitem {
	display: grid;
	grid-template-columns: 5fr 4fr 3fr 3fr;
}
.project-goal-input-group {
	display: flex;
	align-items: center;
}
.project-goal-input-group > input {
	flex-grow: 1;
}

.popup-wrapper {
	visibility: hidden;

	position: absolute;
	top: 0;
	left: 0;
	bottom: 0;
	right: 0;
}
.overlay {
	position: absolute;
	top: 0;
	left: 0;
	bottom: 0;
	right: 0;

	opacity: 0;
	transition: opacity 500ms;
	background-color: #000;
}
.popup-wrapper.show {
	visibility: visible;
}
.popup-wrapper.show > .overlay {
	opacity: 0.5;
}
.popup-content {
	position: relative;
	margin: 1em;
	background-color: #fff;
	padding: 1em;
}
