mixin repeatingSection(name, values)
	- const { display = [], collapse = [] } = values
	fieldset(class=`repeating_${dashedName(name)}`)
		.grid.gap-2.relative.repeating-grid
			.grid.grid-flow-col.gap-2.displayed.custom-grid
				+repeatingChatButton(attrName(name))
				//- Remove the name because it is the button above
				each val in display.filter((e) => e !== "name")
					+attrSpan(val)(class="display")
			+editToggle()
			+collapseToggle()
			.collapsible.grid.gap-2
				each val in collapse
					.grid.gap-2.col-auto-fr.items-center
						h4(data-i18n=val)
						+attrSpan(val)(class="text-center")
				.description
					span.display(name='attr_description')
			.edit.grid.gap-2
				.grid.gap-2.grid-flow-col.edit-grid
					each val in [...display, ...collapse]
						.grid.gap-2.col-auto-fr.items-center
							h4(data-i18n=val)
							+textInput(val)
				.description
					+textarea('description')


mixin repeatingList(name, values)
	.grid.double-border-2.rounded-md.content-start.p-2.relative(class=dashedName(name))
		+title(name)
		+subheaders(values.display)
		+repeatingSection(name, values)

mixin repeatingSkills()
	fieldset(class=`repeating_skills`)
		input(type="hidden" name="attr_attribute_abbreviation" value= "STR")
		.grid.gap-2.relative.repeating-grid
			.grid.grid-flow-col.gap-2.displayed.custom-grid
				+repeatingRollButton(`skill`)
				+attrSpan('bonus')(class="text-center")
			+editToggle()
			+collapseToggle()
			.collapsible.grid.gap-2
				each val in ["category"]
					.grid.gap-2.col-auto-fr.items-center
						h4(data-i18n=val)
						+attrSpan(val)(class="capitalize")
					.grid.gap-2.col-auto-fr.items-center
							h4(data-i18n="attribute")
							span.uppercase(name=`attr_attribute_abbreviation`)
				.description
					span.display(name='attr_description')
			.edit.grid.gap-2
				each val in ["name", "category"]
					.grid.gap-2.col-auto-fr.items-center
						h4(data-i18n=val)
						+textInput(val)
				.grid.gap-2.col-auto-fr.items-center
					h4(data-i18n="attribute")
					select(name="attr_attribute")
						each val in coreAttributes
							option(value=`@{${val}}` data-i18n=val)
								val
				.grid.gap-2.col-auto-fr.items-center
					h4(data-i18n="bonus")
					+numberInput("bonus")
				.description
					+textarea('description')

	