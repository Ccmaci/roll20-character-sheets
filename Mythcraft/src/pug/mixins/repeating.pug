mixin repeatingSection(name, values)
	- const { display = [], collapse = [] } = values
	fieldset(class=`repeating_${dashedName(name)}`)
		.grid.gap-2.relative.repeating-grid
			.grid.grid-flow-col.gap-2.displayed.custom-grid
				+repeatingChatButton(attrName(name))
				//- Remove the name because it is the button above
				each val in display.filter((e) => e !== "name")
					+attrSpan(val)(class="display")
			+editToggle()
			+collapseToggle()
			.collapsible.grid.gap-2
				each val in collapse
					.grid.gap-2.col-auto-fr.items-center
						h4(data-i18n=val)
						+attrSpan(val)
				.description
					span.display(name='attr_description')
			.edit.grid.gap-2
				.grid.gap-2.edit-grid
					each val in [...display, ...collapse]
						.grid.gap-2.col-auto-fr.items-center
							h4(data-i18n=val)
							+textInput(val)
				.description
					+textarea('description')


mixin repeatingList(name, values)
	.grid.double-border-2.rounded-md.p-2.relative(class=dashedName(name)).content-start
		+title(name)
		+subheaders(values.display)
		+repeatingSection(name, values)

mixin repeatingSkills()
	fieldset(class=`repeating_skills`)
		input(type="hidden" name="attr_attribute_abbreviation" value= "STR")
		.grid.gap-2.relative.repeating-grid
			.grid.grid-flow-col.gap-2.displayed.custom-grid
				+repeatingRollButton(`skill`)
				span.uppercase(name=`attr_attribute_abbreviation`)
				+attrSpan('bonus')(class="text-center")
			+editToggle()
			+collapseToggle()
			.collapsible.grid.gap-2
				each val in ["category"]
					.grid.gap-2.col-auto-fr.items-center
						h4(data-i18n=val)
						+attrSpan(val)(class="capitalize")
				.description
					span.display(name='attr_description')
			.edit.grid.gap-2
				each val in ["name", "category"]
					.grid.gap-2.col-auto-fr.items-center
						h4(data-i18n=val)
						+textInput(val)
				.grid.gap-2.grid-flow-col.items-center
					.grid.gap-2.col-auto-fr.items-center
						h4(data-i18n="attribute")
						select(name="attr_attribute")
							each val in coreAttributes
								option(value=`@{${val}}` data-i18n=val)
									val
					.grid.gap-2.col-auto-fr.items-center
						h4(data-i18n="bonus")
						+numberInput("bonus")
				.description
					+textarea('description')

mixin repeatingAttacks()
	fieldset(class="repeating_attacks")
		input(type="hidden" name="attr_attribute_abbreviation" value= "STR")
		.grid.gap-2.relative.repeating-grid 
			.grid.grid-flow-col.gap-2.displayed.custom-grid
				+repeatingRollButton('name')
				each val in  ['apc', "attribute_abbreviation",'bonus', 'damage', 'damage type', 'range']
					+attrSpan(val)(class="text-center")
			+editToggle()
			+collapseToggle()
			.collapsible.grid.gap-2
				each val in ['tags', "type", "size"]
					.grid.gap-2.col-auto-fr.items-center
						h4(data-i18n=val)
						+attrSpan(val)(class="capitalize")

				.description
					span.display(name='attr_description')
			.edit.grid.gap-2
				.grid.gap-2.grid-flow-col.col-auto-fr.items-center
					h4(data-i18n="name")
					+textInput("name")
				.grid.gap-2.grid-flow-col.items-center
					.grid.gap-2.col-auto-fr.items-center
						h4(data-i18n="attribute")
						select(name="attr_attribute")
							each val in coreAttributes
								option(value=`@{${val}}` data-i18n=val)
									val
					.grid.gap-2.col-auto-fr.items-center
						h4(data-i18n="apc")
						+textInput("apc")
					.grid.gap-2.col-auto-fr.items-center
						h4(data-i18n="bonus")
						+numberInput("bonus")
				.grid.gap-2.grid-flow-col.items-center
					.grid.gap-2.col-auto-fr.items-center
						h4(data-i18n="damage")
						+textInput("damage")
					.grid.gap-2.col-auto-fr.items-center
						h4(data-i18n="damage type")
						+textInput("damage type")
				.grid.gap-2.grid-flow-col.items-center
					.grid.gap-2.col-auto-fr.items-center
						h4(data-i18n="range")
						+textInput("range")
					.grid.gap-2.col-auto-fr.items-center
						h4(data-i18n="reload")
						+textInput("reload")
				.grid.gap-2.grid-flow-col.items-center
					.grid.gap-2.col-auto-fr.items-center
						h4(data-i18n="size")
						+textInput("size")
					.grid.gap-2.col-auto-fr.items-center
						h4(data-i18n="type")
						+textInput("type")
				.grid.gap-2.grid-flow-col.items-center
					.grid.gap-2.col-auto-fr.items-center
						h4(data-i18n="tags")
						+textInput("tags")
				.grid.gap-2.grid-flow-col.items-center
					.grid.gap-2.col-auto-fr.items-center
						h4(data-i18n="category")
						+textInput("category")
					.grid.gap-2.col-auto-fr.items-center
						h4(data-i18n="subcategory")
						+textInput("subcategory")

				.description
					+textarea('description')
