.pc.grid.gap-6.p-2
	input(type="hidden"  name="attr_tab" value="main")
	
	.grid.gap-4
		.flex.flex-wrap.flex-row.gap-4
			.logo.grow-0
				img(src='images/logo.png')
			.grid.gap-1.grow.bio
				.grid.grid-flow-col.gap-2.name-row
					+headerInput('character name')
					.grid.col-auto-fr.gap-1.grid-flow-col.items-center
						h3(data-i18n="level")
						+numberInput("level")
				.grid.grid-flow-col.gap-2.name-row
					each val in ['lineage', 'age']
						+headerInput(val)
				.grid.grid-flow-col.gap-2
					each val in ['height', 'weight', 'size']
						+headerInput(val)(inputClass="text-center")
				.grid.grid-flow-col.gap-2
					each val in ['appearance']
						+headerInput(val)
		.grid.gap-2.grid-flow-col.auto-cols-min
			each tab in ['main', 'combat', 'magic', 'journal']
				.grid.tab.relative
					input(type="radio" name="attr_tab" value=tab checked=(!!tab === 'main'))
					span(data-i18n=tab)


	.grid.gap-4.main
		.grid.gap-2.double-border-2.rounded-md.content-start.p-2.relative
			+title('personality / background')
			.grid.grid-flow-col.gap-2.personality
				each val in [ 'values', 'drive', 'quirk']
					+headerInput(val)(class=`${val}`)
			.grid.grid-flow-col.gap-2.background
				each val in ['background', 'occupation tag']
					+headerInput(val)(class=`${val}`)

		.grid.gap-2.grid-flow-col.items-center.content-start.attrs.relative
			each val in coreAttributes
				.circle.rounded-full.border.grid.justify-center.items-center.font-bold
					+attributeRoll(shortName(val), `${val}`)
					+numberInput(val)

		.grid.grid-flow-cols.gap-4.content-start.p-2.relative.two-col-grid
			.grid.gap-4.content-start
				.grid.double-border-2.rounded-md.content-start.p-2.relative.skills
					+title('skills')
					.grid.grid-flow-col.gap-2.mb-2.border-bottom.subheaders
						.grid.grid-flow-col.gap-2.custom-grid
							each val in ['name','category', 'attribute', 'bonus']
								h3(data-i18n=val)
					+repeatingSkills('skill')
				+repeatingList('inventory', {display: ['name', 'qty']})
				.grid.double-border-2.rounded-md.content-start.p-2.relative
					+title('currency')
					+textarea("currency")
			.grid.gap-4.content-start
				+repeatingList('talents', {display: ['name', 'level']})
				+repeatingList('abilities', {display: ['name'], collapse: ["source"]})
		
	.grid.gap-4.combat
		.grid.grid-flow-col.gap-2.hp-row
			.hit-points.grid.double-border-2.rounded-md
				.max.grid.justify-center.p-2
					h2.text-center(data-i18n='hp max')
					+numberInput("hp max")
				.grid.grid-flow-col
					each val in ["hp", "shield"]
						.grid.justify-center.p-2(class=`${val}`)
							h2.text-center(data-i18n=val)
							+numberInput(val)
			.grid.justify-center.grid-flow-col.gap-2
				.grid
					.double-border-2.p-2.justify-center.rounded-md.justify-end.box
						+numberInput("armor rating", 10)
					h2.text-center(data-i18n="armor rating")
				.grid
					.double-border-2.p-2.justify-center.rounded-md.justify-end.box
						+numberInput("speed", 20)(class="text-center")
					h2.text-center(data-i18n="speed")
				.grid
					.double-border-2.p-2.justify-center.rounded-md.justify-end.box
						+numberInput("death points", 0)
					h2.text-center(data-i18n="death points")
		.grid.grid-flow-col
			.grid
				.double-border-2.p-2.justify-center.rounded-md
					+numberInput("action points round", 3)
				h2.text-center(data-i18n="ap/rounded")
			
			.grid
				.grid.grid-flow-col.gap-4
					h2.text-center(data-i18n="special action points")
					+numberInput("special action points")
				.grid.grid-flow-col.action-point-scale
					input(type="hidden" name="attr_action_points" value="1")
					- let n = 1;
					while n < 21
						.grid.justify-center.items-center.relative
							input.toggle(type="checkbox" name=`attr_action_points` value=n)
							span.font-bold= n++

		.grid.gap-1.justify-between.items-center.attrs
			each val in combatAttributes
				.grid.relative.justify-center.items-center
					.circle.rounded-full.border.grid.justify-center.items-center.font-bold
						+attributeRoll(shortName(val), `@{${val}}`)
						+numberInput(val)
			div
			each val in derivedAttributes
				.grid.relative.justify-center.items-center(class=`${val}`)
					.circle.rounded-full.border.grid.justify-center.items-center.font-bold
						h3.text-center(data-i18n=shortName(val))
						span.text-center(name=`attr_${attrName(val)}`)
			.grid.relative.justify-center.items-center(class=`${val}`)
				.circle.rounded-full.border.grid.justify-center.items-center.font-bold
					h3.text-center(data-i18n="rerolls")
					+numberInput("rerolls")
		.grid.gap-4.grid-flow-col.auto-cols-fr
			.grid.double-border-2.rounded-md.relative
				+title("attacks & spellcasting")
			.grid.gap-4
				+repeatingList('reactive actions', {display: ['name']})
				+repeatingList('conditions', {display: ['name']})
		+repeatingList('abilities list', {display: ['name']})

	.grid.gap-4.magic
		.grid.grid-flow-col.gap-4.mb-4
			.grid.double-border-2.rounded-md.items-center.justify-center
				.grid.gap-1.grid-flow-col.items-center
					h2.text-center(data-i18n='source')
					span /
					h2.text-center(data-i18n='level')
				+numberInput("source")
			.grid.grid-flow-col.gap-4.items-center
				each val in ["max spell points", "current spell points", "spellcasting ability"]
					.grid
						.double-border-2.p-2.justify-center.rounded-md
							+numberInput(val)
						h2.text-center(data-i18n=val)
						
		.grid.gap-4.items-center
			.grid.double-border-2.rounded-md.content-start.p-2.source-magic.relative
				.grid.gap-4.items-center.justify-center.absolute.title
					+textInput('source magic')
					h2.text-center(data-i18n='source magic')
				+subheaders(['name', 'apc'])
				+repeatingSection('source magic', {display: ['name', 'apc']})

			+repeatingList('rituals', {display: ['name']})

			+repeatingList('spells', {display: ['name', 'apc', 'spc']})
	
	.grid.gap-4.journal
		.grid.double-border-2.rounded-md.content-start.p-2.relative
			+repeatingList('additional info', {display: ['name', "occupation", "category"]})
			
		.grid.gap-4.grid-flow-col.auto-cols-fr
			+repeatingList('location request contacts', {display: ['name']})

			.grid.justify-center.gap-4.resources
				.grid.double-border-2.rounded-md.content-start.p-2.relative
					+title('resources')
					fieldset(class="repeating_resources")
						.grid.content-start.p-2
							+textInput('name')
							.grid.gap-4.grid-flow-col
								+numberInput('current')
								+numberInput('max')
						.grid
							h3.text-center(data-i18n='current/max')

		+repeatingList('journal', {display: ['name', 'date']})
