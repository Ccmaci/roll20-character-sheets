.pc.p-2.w-full.h-full
	input(type="hidden"  name="attr_tab" value="main")

	.header.grid.gap-6.mb-4
		.flex.flex-wrap.flex-row.gap-4
			.logo.grow-0
				img(src='images/logo.png')
			.grid.gap-1.grow.bio
				.grid.grid-flow-col.gap-1
					+headerInput('character name')
					+headerInput('lineage')
				.grid.grid-flow-col.gap-1
					+headerInput('level')
					+headerInput('height')
					+headerInput('weight')
				.grid.grid-flow-col.gap-1
					+headerInput('eye color')
					+headerInput('hair color')
					+headerInput('other')
		.grid.gap-2.grid-flow-col.auto-cols-min
			.grid.radio-button
				input(type="radio" name="attr_tab" value="main" checked)
				span(data-i18n='main')
			.grid.radio-button
				input(type="radio" name="attr_tab" value="combat")
				span(data-i18n='combat')
			.grid.radio-button
				input(type="radio" name="attr_tab" value="magic")
				span(data-i18n='magic')
			.grid.radio-button
				input(type="radio" name="attr_tab" value="journal")
				span(data-i18n='journal')


	.grid.gap-6.main
		.div
			h2.text-center(data-i18n='personality / background')
			+textarea('personality background')
		.grid.gap-4.justify-between.items-center.attributes
			each val in ['str', 'dex', 'end', 'luck', 'awr', 'int', 'cha']
				.grid.attribute.justify-center.items-center.border
					.circle.rounded-full.border.grid.justify-center.items-center.font-bold
						h3.text-center(data-i18n=val)
						+numberInput(val)
					.box.grid.justify-center.items-center.skill
						h3.text-center(data-i18n='skills/bonus')
						+textarea(`${val} skills bonus`)
			.grid.justify-center.items-center.border.relative
				.grid.justify-center.items-center.currency-header.absolute
					h2.text-center.font-bold(data-i18n="currency")
				.box.grid.justify-center.items-center.h-full.w-full
					+textarea("currency")
		.grid.grid-flow-col.grid-cols-2.gap-4
			.grid.gap-4.inventory.content-start
				h2.text-center(data-i18n='inventory')
				fieldset(class=`repeating_inventory`)
					.grid.descriptor.relative.gap-1
						+editFlag()
						.grid.grid-flow-col.gap-4
							.grid.col-auto-fr.gap-2
								h3(data-i18n='name')
								span.display(name=`attr_${attrName('name')}`)
								+textInput('name')
							.grid.col-auto-fr.gap-2
								h3(data-i18n='qty')
								span.display.text-center(name=`attr_${attrName('qty')}`)
								+textInput('qty')
						+repeatingChatButton("item")
						.grid.notes
							span.display.pl-4(name='attr_notes')
							+textarea('notes')
			.grid.gap-4.talents.content-start
				h2.text-center(data-i18n='talents')
				fieldset(class=`repeating_talents`)
					.grid.descriptor.relative.gap-1
						+editFlag()
						.grid.grid-flow-col.gap-4
							.grid.col-auto-fr.gap-2
								h3(data-i18n='name')
								span.display(name=`attr_${attrName('name')}`)
								+textInput('name')
							.grid.col-auto-fr.gap-2
								h3(data-i18n='level')
								span.display.text-center(name=`attr_${attrName('level')}`)
								+textInput('level')
						+repeatingChatButton("name")
						.grid.notes
							span.display.pl-4(name='attr_notes')
							+textarea('notes')
		.div
			h2.text-center(data-i18n='bop / lineage abilities')
			+textarea('abilities')

	.grid.gap-6.magic

	.grid.gap-6.combat
		.grid.grid-flow-col
			.hit-points.grid.double-border-2.rounded-md
				.max.grid.justify-center.p-2
					h2.text-center(data-i18n='max hp')
					+numberInput("max hp")
				.grid.grid-flow-col
					.grid.hp.justify-center.p-2
						h2.text-center(data-i18n='hp')
						+numberInput("hp")
					.grid.justify-center.p-2
						h2.text-center(data-i18n='shield')
						+numberInput("shield")
			.grid.justify-center.grid-flow-col.gap-4
				each val in ["armor rating", "speed", "death points"]
					.grid
						.double-border-2.p-2.justify-center.rounded-md
							+numberInput(val)
						h2.text-center(data-i18n=val)
		.grid.grid-flow-col
			.grid
				.double-border-2.p-2.justify-center.rounded-md
					+numberInput("ap/rounded")
				h2.text-center(data-i18n="ap/rounded")
			
			.grid
				.grid.grid-flow-col.gap-2
					h2.text-center(data-i18n="special action points")
					+numberInput("special action points")
				.grid.grid-flow-col
					- let n = 1;
					while n < 21
						span= n++

		.grid.gap-4.justify-between.items-center.attributes
			each val in ['str', 'dex', 'end', 'awr', 'int', 'cha', 'luck', 'cor']
				.grid.relative.justify-center.items-center
					.circle.rounded-full.border.grid.justify-center.items-center.font-bold
						h2.text-center(data-i18n=val)
						+numberInput(val)
			div
			each val in ['ref', 'for', 'ant', 'log', 'wil']
				.grid.relative.justify-center.items-center(class=`${val}`)
					.circle.rounded-full.border.grid.justify-center.items-center.font-bold
						h3.text-center(data-i18n=val)
						+numberInput(val)
		.grid.gap-4.grid-flow-col 
			.grid.double-border-2.rounded-md
				h2.text-center(data-i18n='attacks & spellcasting')
			.grid.gap-4
				.grid.double-border-2.rounded-md.content-start.p-2.reactive
					h2.text-center(data-i18n='reactive actions')
					+simpleRepeatingSection('reactive actions')
				.grid.double-border-2.rounded-md.conditions.p-2
					h2.text-center(data-i18n='conditions')
					+simpleRepeatingSection('conditions')
		.grid.double-border-2.rounded-md.abilities.p-2
			h2.text-center(data-i18n='abilities list')
			+simpleRepeatingSection('abilities')